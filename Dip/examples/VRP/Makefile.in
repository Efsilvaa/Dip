# $Id: $
#===========================================================================#
# This file is part of the Decomp Solver Framework.                         #
#                                                                           #
# Decomp is distributed under the Common Public License as part of the      #
# COIN-OR repository (http://www.coin-or.org).                              #
#                                                                           #
# Author: Matthew Galati, SAS Institute Inc. (matthew.galati@sas.com)       #
#                                                                           #
# Copyright (C) 2002-2009, Lehigh University, Matthew Galati, and Ted Ralphs#
# All Rights Reserved.                                                      #
#===========================================================================#

#===========================================================================#
EXEDECOMP = decomp_vrp@EXEEXT@

# sources files
OBJS         = VRP_DecompApp.@OBJEXT@
OBJS        += VRP_GSECCut.@OBJEXT@
OBJS        += VRP_SPPRC.@OBJEXT@
OBJS        += VRP_Main.@OBJEXT@

#===========================================================================#
# additional libraries needed

# Concorde
CONCORDE_LIB = concorde.a
CONCORDE_DIR = ../ExternalSolvers/TSP/concorde
CONCORDE_INC = ${CONCORDE_DIR}/INCLUDE
QSOPT_DIR    = ../ExternalSolvers/TSP
QSOPT_LIB    = qsopt.a

# Boost
BOOST_DIR = ../ExternalSolvers/Graph/boost_1_40_0

# CVRPSEP
CVRPSEP_DIR = ../ExternalSolvers/VRP/CVRPSEP
CVRPSEP_LIB = cvrpsep

#===========================================================================#
# additional include and link flags
ADDLIBS      += $(CONCORDE_DIR)/$(CONCORDE_LIB)
ADDLIBS      += $(CONCORDE_DIR)/$(QSOPT_LIB) 
ADDINCFLAGS  += -I$(CONCORDE_INC)
ADDLIBS      += -L$(CVRPSEP_DIR)/obj -l$(CVRPSEP_LIB)
ADDINCFLAGS  += -I$(CVRPSEP_DIR)
#ADDINCFLAGS  += -I${BOOST_DIR}

#===========================================================================#
# directory to the source files
SRCDIR = @srcdir@
VPATH  = @srcdir@

#===========================================================================#
# C++ Compiler command
CXX = @CXX@
# C++ Compiler options
CXXFLAGS = @CXXFLAGS@
# additional C++ Compiler options for linking
CXXLINKFLAGS = @RPATH_FLAGS@


#===========================================================================#
# directory with COIN header files
COININCDIR = @abs_include_dir@
# directory with COIN libraries
COINLIBDIR = @abs_lib_dir@

# includes, use the CYGPATH_W variables to allow compilation with win
INCL =  -I`$(CYGPATH_W) $(COININCDIR)` $(ADDINCFLAGS)

#===========================================================================#
# include COIN flags and library options
include ../Makefile.Examples

#===========================================================================#
# The following is necessary under cygwin, if native compilers are used
CYGPATH_W = @CYGPATH_W@

#===========================================================================#
all: $(EXEDECOMP)

.SUFFIXES: .cpp .c .o .obj

$(EXEDECOMP): $(CONCORDE_DIR)/$(CONCORDE_LIB) $(CVRPSEP_DIR)/$(CVRPSEP_LIB).a $(OBJS)
	bla=;\
	for file in $(OBJS); do bla="$$bla `$(CYGPATH_W) $$file`"; done; \
	$(CXX) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $$bla $(ADDLIBS) $(LIBS)

$(CONCORDE_DIR)/$(CONCORDE_LIB):
	(cd ${CONCORDE_DIR} \
        && ./configure --with-qsopt=@abs_lib_dir@/../Dip/examples/ExternalSolvers/TSP \
	&& make)

$(CVRPSEP_DIR)/$(CVRPSEP_LIB).a:
	(cd $(CVRPSEP_DIR) && make)


clean:
	rm -rf $(EXE) $(OBJS)

.cpp.o:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ `test -f '$<' || echo '$(SRCDIR)/'`$<


.cpp.obj:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(SRCDIR)/$<'; fi`
