#===========================================================================#
# This file is part of the Decomp Solver Framework.                         #
#                                                                           #
# Decomp is distributed under the Common Public License as part of the      #
# COIN-OR repository (http://www.coin-or.org).                              #
#                                                                           #
# Author: Matthew Galati, SAS Institute Inc. (matthew.galati@sas.com)       #
#                                                                           #
# Copyright (C) 2002-2009, Lehigh University, Matthew Galati, and Ted Ralphs#
# All Rights Reserved.                                                      #
#===========================================================================#

#===========================================================================#
EXEDECOMP = decomp_tsp@EXEEXT@

#source files
OBJS         = TSP_DecompApp.@OBJEXT@
OBJS        += TSP_CutGen.@OBJEXT@
OBJS        += TSP_SubtourCut.@OBJEXT@
OBJS        += TSP_Main.@OBJEXT@

#===========================================================================#
# additional libraries needed 

# concorde
CONCORDE_LIB = concorde
CONCORDE_DIR = ../ExternalSolvers/TSP/concorde

# boost
#BOOST_DIR = ../ExternalSolvers/Graph/boost_1_33_1

#===========================================================================#
# additional include and linnk flags
ADDLIBS      += $(CONCORDE_DIR)/$(CONCORDE_LIB).a
ADDLIBS      += $(CONCORDE_DIR)/../qsopt.a
ADDINCFLAGS  += -I$(CONCORDE_DIR)/INCLUDE
#ADDINCFLAGS  += -I$(BOOST_DIR)

#===========================================================================#
# directory to the source files
SRCDIR = @srcdir@
VPATH  = @srcdir@

#===========================================================================#
# C++ compiler command
CXX = @CXX@
# C++ compiler options
CXXFLAGS = @CXXFLAGS@
# C++ compiler options for linking
CXXLINKFLAGS = @RPATH_FLAGS@

#===========================================================================#
# directory with COIN header files
COININCDIR = @abs_include_dir@
# directory with COIN libraries
COINLIBDIR = @abs_lib_dir@

# includes, use the CYGPATH_W variables to allow compilation with win
INCL =  -I`$(CYGPATH_W) $(COININCDIR)` $(ADDINCFLAGS)

#===========================================================================#
# include COIN flags and library options
include ../Makefile.Examples

#===========================================================================#
# The following is necessary under cygwin, if native compilers are used
CYGPATH_W = @CYGPATH_W@

#===========================================================================#
all: $(EXEDECOMP)

.SUFFIXES: .cpp .c .o .obj

$(EXEDECOMP): $(CONCORDE_DIR)/$(CONCORDE_LIB).a $(OBJS)
	bla=;\
	for file in $(OBJS); do bla="$$bla `$(CYGPATH_W) $$file`"; done; \
	$(CXX) $(CXXLINKFLAGS) $(CXXFLAGS) -o $@ $$bla $(ADDLIBS) $(LIBS)

$(CONCORDE_DIR)/$(CONCORDE_LIB).a:
	(cd $(CONCORDE_DIR)        && \
	chmod +x ../build.concorde && \
	../build.concorde          &&\
	${MAKE})

clean:
	(cd $(CONCORDE_DIR) && ${MAKE} clean)
	rm -rf $(EXE) $(OBJS)

.cpp.o:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ `test -f '$<' || echo '$(SRCDIR)/'`$<


.cpp.obj:
	$(CXX) $(CXXFLAGS) $(INCL) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(SRCDIR)/$<'; fi`
